#!/bin/bash

case "$1" in
	-24 | --24 )
		if command -v tput >/dev/null 2>&1; then
			lines=$(tput lines)
			cols=$(tput cols)
		else
			lines=24
			cols=80
		fi

		resx=$(($cols-2))
		resy=$(($lines-8))
		if [[ $resy -gt $(($resx/3)) ]]; then
			resy=$((resx/3))
		fi

		for y in $(seq 0 $resy); do
			echo
			y_scaled=$(( $y*255/$resy ))

			b=$y_scaled

			for x in $(seq 0 $resx); do
				x_scaled=$(( $x*511/$resx ))

				xy=$(($x_scaled + $y_scaled))
				if   [ $xy -le 255 ]; then r=255
				elif [ $xy -ge 511 ]; then r=0
				else                       r=$((511 - $xy))
				fi

				xy=$(( $x_scaled + (255 - $y_scaled) ))
				if   [ $xy -le 255 ]; then g=0
				elif [ $xy -ge 511 ]; then g=255
				else                       g=$(($xy - 255))
				fi

				echo -en "\e[48;2;$r;$g;${b}m \e[0m"
			done
		done
		echo
		;;

	-256 | --256 )
		for color1 in 0 8; do
			echo
			for color2 in $(seq 0 7); do
				color=$((color1 + color2))
				echo -en "\e[48;5;${color}m  \e[0m"
			done
		done
		echo

		for color1 in $(seq 16 36 196); do
			echo
			for color2 in $(seq 0 35); do
				color=$((color1 + color2))
				echo -en "\e[48;5;${color}m  \e[0m"
			done
		done
		echo

		echo
		for color in $(seq 232 255); do
			echo -en "\e[48;5;${color}m  \e[0m"
		done
		echo
		;;

	*)
		for bg in 9 0 1 2 3 4 5 6 7; do
			for bold in 22 1 2; do
				echo
				for fg in 9 0 1 2 3 4 5 6 7; do
					echo -en "\e[3${fg};4${bg};${bold}mAbcd\e[0m  "
				done
			done
		done
		echo
		;;
esac

