#!/bin/sh
#
# autopage - Automatically use a pager when necessary

set -o errexit

buffer=

cleanup () {
	[ -n "$buffer" ] && rm -rf "$buffer"
}
trap 'cleanup' EXIT

# Portable version of `echo`
prints () {
	printf '%s\n' "$*"
}

# Environment variable defaults
: ${AUTOPAGE_CUTOFF:=80%}
if [ -z "$AUTOPAGE_PAGER" ]; then
	case "$PAGER" in
		autopage*) PAGER=''
	esac
	AUTOPAGE_PAGER=${PAGER:-'less -+FX'}
fi

# Environment variable validation
if ! expr "$AUTOPAGE_CUTOFF" : '^[0-9]\+%\?$' >/dev/null; then
	prints >&2 'Error: $AUTOPAGE_CUTOFF must be a number or percentage'
	exit 1
fi
case "$AUTOPAGE_PAGER" in
	autopage*)
		prints >&2 'Error: $AUTOPAGE_PAGER cannot recursively run autopage'
		exit 1
esac

case "$AUTOPAGE_CUTOFF" in
	*%) cutoff=$(($(tput lines)*$(expr "$AUTOPAGE_CUTOFF" : '\(.*\)%')/100)) ;;
	*)  cutoff=$AUTOPAGE_CUTOFF ;;
esac

buffer=$(mktemp)

count=0
while read -r; do
	printf '%s\n' "$REPLY" >> "$buffer"
	count=$(($count + 1))
	[ $count -gt "$cutoff" ] && break
done

if [ $count -gt "$cutoff" ]; then
	cat "$buffer" - | sh -c "$AUTOPAGE_PAGER"' "$@"' autopage-sh "$@"
else
	cat "$buffer"
fi
